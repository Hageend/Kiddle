generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model detalle_dieta {
  id_detalle_dieta     Int      @id @default(autoincrement())
  id_dieta             Int
  id_producto          Int
  cantidad_recomendada Decimal? @db.Decimal(8, 2)
  frecuencia           String?  @db.VarChar(20)
  momento_dia          String?  @db.VarChar(20)
  dieta                dieta    @relation(fields: [id_dieta], references: [id_dieta], onDelete: Cascade, onUpdate: NoAction)
  producto             producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, onUpdate: NoAction)
}

model detalle_pedido {
  id_detalle_pedido Int      @id @default(autoincrement())
  id_pedido         Int
  id_producto       Int
  cantidad          Int
  precio_unitario   Decimal  @db.Decimal(10, 2)
  subtotal          Decimal  @db.Decimal(10, 2)
  pedido            pedido   @relation(fields: [id_pedido], references: [id_pedido], onDelete: Cascade, onUpdate: NoAction)
  producto          producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, onUpdate: NoAction)
}

model dieta {
  id_dieta                     Int             @id @default(autoincrement())
  id_mascota                   Int
  fecha_creacion               DateTime?       @default(dbgenerated("CURRENT_DATE")) @db.Date
  estado                       String?         @db.VarChar(20)
  calorias_totales             Decimal?        @db.Decimal(8, 2)
  proteina_total               Decimal?        @db.Decimal(8, 2)
  grasa_total                  Decimal?        @db.Decimal(8, 2)
  fibra_total                  Decimal?        @db.Decimal(8, 2)
  tiempo_ejercicio_recomendado Int?
  tipo_ejercicio_recomendado   String?
  comentario                   String?
  detalle_dieta                detalle_dieta[]
  mascota                      mascota         @relation(fields: [id_mascota], references: [id_mascota], onDelete: Cascade, onUpdate: NoAction)
}

model direccion {
  id_direccion    Int      @id @default(autoincrement())
  id_usuario      Int
  calle           String   @db.VarChar(255)
  numero_exterior String?  @db.VarChar(10)
  numero_interior String?  @db.VarChar(10)
  colonia         String   @db.VarChar(100)
  codigo_postal   String   @db.VarChar(10)
  estado          String   @db.VarChar(100)
  usuario         usuario  @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade, onUpdate: NoAction)
  pedido          pedido[]
}

model especie {
  id_especie Int        @id @default(autoincrement())
  nombre     String     @db.VarChar(100)
  producto   producto[]
  raza       raza[]
}

model habitos_alimenticios {
  id_habito          Int      @id @default(autoincrement())
  id_mascota         Int
  alimento_principal String?
  cantidad_diaria    Decimal? @db.Decimal(8, 2)
  recibe_sobras      Boolean? @default(false)
  tipo_sobras        String?
  cantidad_sobras    Decimal? @db.Decimal(8, 2)
  recibe_premios     Boolean? @default(false)
  tipo_premios       String?
  cantidad_premios   Decimal? @db.Decimal(8, 2)
  mascota            mascota  @relation(fields: [id_mascota], references: [id_mascota], onDelete: Cascade, onUpdate: NoAction)
}

model historial_operacion {
  id_operacion    Int       @id @default(autoincrement())
  id_mascota      Int
  tipo_operacion  String?
  fecha_operacion DateTime? @db.Date
  mascota         mascota   @relation(fields: [id_mascota], references: [id_mascota], onDelete: Cascade, onUpdate: NoAction)
}

model historial_salud {
  id_historial      Int     @id @default(autoincrement())
  id_mascota        Int
  enfermedades      String?
  medicamentos      String?
  alergias_alimento String?
  sintomas_alergia  String?
  mascota           mascota @relation(fields: [id_mascota], references: [id_mascota], onDelete: Cascade, onUpdate: NoAction)
}

model mascota {
  id_mascota           Int                    @id @default(autoincrement())
  id_usuario           Int
  id_raza              Int
  nombre               String                 @db.VarChar(100)
  sexo                 String?                @db.VarChar(10)
  fecha_nacimiento     DateTime?              @db.Date
  peso_inicial         Decimal?               @db.Decimal(5, 2)
  altura               Decimal?               @db.Decimal(5, 2)
  tama_o               String?                @map("tamaño") @db.VarChar(20)
  esterilizado         Boolean?               @default(false)
  actividad            String?                @db.VarChar(50)
  fecha_registro       DateTime?              @default(dbgenerated("CURRENT_DATE")) @db.Date
  dieta                dieta[]
  habitos_alimenticios habitos_alimenticios[]
  historial_operacion  historial_operacion[]
  historial_salud      historial_salud[]
  raza                 raza                   @relation(fields: [id_raza], references: [id_raza], onDelete: Cascade, onUpdate: NoAction)
  usuario              usuario                @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade, onUpdate: NoAction)
  registro_dieta       registro_dieta[]
}

model pedido {
  id_pedido            Int              @id @default(autoincrement())
  id_usuario           Int
  fecha_pedido         DateTime?        @default(now()) @db.Timestamp(6)
  total                Decimal          @db.Decimal(10, 2)
  estado               String?          @db.VarChar(20)
  id_direccion_entrega Int
  detalle_pedido       detalle_pedido[]
  direccion            direccion        @relation(fields: [id_direccion_entrega], references: [id_direccion], onDelete: Cascade, onUpdate: NoAction)
  usuario              usuario          @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade, onUpdate: NoAction)
}

model producto {
  id_producto                Int                     @id @default(autoincrement())
  codigo_sku                 String                  @unique @db.VarChar(100)
  nombre                     String                  @db.VarChar(255)
  marca                      String?                 @db.VarChar(100)
  id_especie                 Int
  edad_recomendada           String?                 @db.VarChar(100)
  tama_o                     String?                 @map("tamaño") @db.VarChar(50)
  tipo_alimento              String?                 @db.VarChar(100)
  sabor_principal            String?                 @db.VarChar(100)
  condiciones_especiales     String?
  caracteristicas_especiales String?
  proteina                   Decimal?                @db.Decimal(5, 2)
  grasa                      Decimal?                @db.Decimal(5, 2)
  fibra                      Decimal?                @db.Decimal(5, 2)
  humedad                    Decimal?                @db.Decimal(5, 2)
  calorias_por_kg            Decimal?                @db.Decimal(8, 2)
  peso_empaque_kg            Decimal?                @db.Decimal(8, 2)
  tipo_empaque               String?                 @db.VarChar(100)
  precio                     Decimal                 @db.Decimal(10, 2)
  cantidad_disponible        Int?                    @default(0)
  detalle_dieta              detalle_dieta[]
  detalle_pedido             detalle_pedido[]
  especie                    especie                 @relation(fields: [id_especie], references: [id_especie], onDelete: Cascade, onUpdate: NoAction)
  registro_alimentacion      registro_alimentacion[]
}

model raza {
  id_raza    Int       @id @default(autoincrement())
  id_especie Int
  nombre     String    @db.VarChar(100)
  mascota    mascota[]
  especie    especie   @relation(fields: [id_especie], references: [id_especie], onDelete: Cascade, onUpdate: NoAction)
}

model registro_alimentacion {
  id_alimentacion    Int            @id @default(autoincrement())
  id_registro        Int
  id_producto        Int
  cantidad_consumida Decimal?       @db.Decimal(8, 2)
  hora_alimentacion  String?        @db.VarChar(20)
  producto           producto       @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, onUpdate: NoAction)
  registro_dieta     registro_dieta @relation(fields: [id_registro], references: [id_registro], onDelete: Cascade, onUpdate: NoAction)
}

model registro_dieta {
  id_registro           Int                     @id @default(autoincrement())
  id_mascota            Int
  fecha                 DateTime?               @default(dbgenerated("CURRENT_DATE")) @db.Date
  peso                  Decimal?                @db.Decimal(5, 2)
  tiempo_ejercicio      Int?
  tipo_ejercicio        String?
  observaciones         String?
  estado_animo          String?                 @db.VarChar(50)
  registro_alimentacion registro_alimentacion[]
  mascota               mascota                 @relation(fields: [id_mascota], references: [id_mascota], onDelete: Cascade, onUpdate: NoAction)
}

model usuario {
  id_usuario       Int         @id @default(autoincrement())
  nombre           String      @db.VarChar(100)
  primer_apellido  String      @db.VarChar(100)
  segundo_apellido String?     @db.VarChar(100)
  correo           String      @unique @db.VarChar(255)
  contrase_a_hash  String      @map("contraseña_hash") @db.VarChar(255)
  telefono         String?     @db.VarChar(20)
  fecha_registro   DateTime?   @default(dbgenerated("CURRENT_DATE")) @db.Date
  direccion        direccion[]
  mascota          mascota[]
  pedido           pedido[]
}
